<?xml version="1.0" encoding="UTF-8"?>

<project name="symfony" default="build">
 <target name="build"
   depends="clean, prepare, deploy_test_server, test, deploy"/>

   	<!-- All target is set failonerror="true" -->

   	<!-- import file for the Built Environment -->
   	<property file="build.properties"/>

   	<!-- Clean all: clean on test server -->
   	<target name="clean" description="Clean up build artifacts">
   		<delete file="${root}/${project.name}.zip"/>
   		<delete dir="${root}/dist"/>
   	</target>

   	<!-- Prepare for build -->
	<target name="prepare" depends="prepare_composer, prepare_grunt" description="Prepare for build">
	</target>

		<target name="prepare_composer" description="Install Symfony require software" >
	        <exec dir="${root.web}/" executable="php" failonerror="true">
				<arg line="composer.phar update" />
	        </exec>
		</target>

		<target name="prepare_grunt" description="Install grunt dependency">
			<exec dir="${root}/scripts/grunt/" executable="npm" failonerror="true">
				<arg line="install" />
	        </exec>
		</target>

	<!-- Deploy on test server -->
	<target name="deploy_test_server" description="Deploy on test server"
		depends="zip, copy_to_server, unzip">
	</target>

		<!-- zip web folder -->
		<target name="zip">
			<zip destfile="${root}/${project.name}.zip"
		       basedir="${root.web}" excludes="vendor/**/*, vendor/**/, vendor, composer.lock, app/cache/**/*, app/logs/**/*" />
		</target>

		<!-- copy zip file to test server -->
		<target name="copy_to_server">
			<scp todir="${user.test}:${password.test}@${host.test}:${archives.destination}"  trust="true" failonerror="true">
			  <fileset dir="${root}" includes="*.zip" />
			</scp>
		</target>

		<!-- unzip -->
		<target name="unzip">
			<sshexec  trust="true" host="${host.test}" username="${user.test}" password="${password.test}" command="unzip -d ${archives.destination} -o ${archives.destination}/${project.name}.zip; cd ${archives.destination}; rm -rf app/cache; rm -rf app/logs; mkdir app/cache; mkdir app/logs; php composer.phar update;APACHEUSER=`ps aux | grep -E '[a]pache|[h]ttpd' | grep -v root | head -1 | cut -d\  -f1`; setfacl -R -m u:$APACHEUSER:rwX -m u:`whoami`:rwX app/cache app/logs; setfacl -dR -m u:$APACHEUSER:rwX -m u:`whoami`:rwX app/cache app/logs; exit;" />
		</target>

	<!-- Run test -->
	<target name="test" description="Run test site" depends="php_unit_test, behat_test" >
	</target>

		<!-- Run behat test  -->
		<target name="behat_test">
	        <exec dir="${root.web}" executable="./bin/behat" failonerror="true">
	        	<arg line="@DevTaskBundle" />
	        </exec>
		</target>

		<!-- Run php unit test -->
		<target name="php_unit_test">
	        <!-- <echo message="Running unit tests with PHPUnit" /> -->
	        <exec executable="phpunit" failonerror="true">
	        	<arg line="-c ${root.web}/app" />
	        </exec>
		</target>

	<target name="deploy" description="deploy on production server and S3 server">
		<exec dir="${root}/scripts/grunt/" executable="grunt" failonerror="true">
        </exec>
        <sshexec  trust="true" host="${host.product}" username="${user.product}" password="${password.product}" command="unzip -d ${archives.destination} -o ${archives.destination}/product.zip; cd ${archives.destination};php composer.phar update; rm -rf app/cache; rm -rf app/logs; mkdir app/cache; mkdir app/logs; APACHEUSER=`ps aux | grep -E '[a]pache|[h]ttpd' | grep -v root | head -1 | cut -d\  -f1`; setfacl -R -m u:$APACHEUSER:rwX -m u:`whoami`:rwX app/cache app/logs; setfacl -dR -m u:$APACHEUSER:rwX -m u:`whoami`:rwX app/cache app/logs; exit;" />
	</target>
</project>
